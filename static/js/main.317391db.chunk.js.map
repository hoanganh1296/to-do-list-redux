{"version":3,"sources":["constants/ActionTypes.js","actions/index.js","components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","reportWebVitals.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/taskEditing.js","reducers/filterTable.js","reducers/search.js","reducers/sort.js","reducers/index.js","index.js"],"names":["LIST_ALL","SAVE_TASK","TOGGLE_FORM","CLOSE_FORM","OPEN_FORM","UPDATE_STATUS_TASK","DELETE_TASK","EDIT_TASK","FILTER_TABLE","SEARCH","SORT","closeForm","type","types","openForm","editTask","task","TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","onSaveTask","state","onClear","status","id","this","taskEditing","isDisplayForm","className","style","display","justifyContent","onClick","required","Component","connect","dispatch","actions","Search","onSearch","keyword","placeholder","search","Sort","sortBy","sortValue","onSort","by","sort","role","href","Control","TaskItem","onUpdateStatus","onDeleteItem","onDeleteTask","onUpdateItem","onOpenForm","onEditTask","index","tasks","TaskList","filter","filterName","filterStatus","onFilterTable","filterTable","toLowerCase","indexOf","a","b","elmTasks","map","App","onClearTask","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","s4","Math","floor","random","toString","substring","generateID","findIndex","result","forEach","data","JSON","parse","localStorage","getItem","initialState","myReducer","action","push","setItem","stringify","splice","parseInt","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.317391db.chunk.js","sourcesContent":["export const LIST_ALL = 'LIST_ALL';\r\nexport const SAVE_TASK = 'SAVE_TASK';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const CLOSE_FORM = 'CLOSE_FORM';\r\nexport const OPEN_FORM = 'OPEN_FORM';\r\nexport const UPDATE_STATUS_TASK = 'UPDATE_STATUS_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const FILTER_TABLE = 'FILTER_TABLE';\r\nexport const SEARCH = 'SEARCH';\r\nexport const SORT = 'SORT';","import * as types from \"./../constants/ActionTypes\";\r\nexport const listAll = () => {\r\n  return {\r\n    type: types.LIST_ALL,\r\n  };\r\n};\r\n\r\nexport const saveTask = (task) => {\r\n  return {\r\n    type: types.SAVE_TASK,\r\n    task, //task : task\r\n  };\r\n};\r\n\r\nexport const toggleForm = () => {\r\n  return {\r\n    type: types.TOGGLE_FORM,\r\n  };\r\n};\r\n\r\nexport const closeForm = () => {\r\n  return {\r\n    type: types.CLOSE_FORM,\r\n  };\r\n};\r\n\r\nexport const openForm = () => {\r\n  return {\r\n    type: types.OPEN_FORM,\r\n  };\r\n};\r\n\r\nexport const updateStatus = (id) => {\r\n  return {\r\n    type: types.UPDATE_STATUS_TASK,\r\n    id, // id:id\r\n  };\r\n};\r\n\r\nexport const deleteTask = (id) => {\r\n  return {\r\n    type: types.DELETE_TASK,\r\n    id, // id:id\r\n  };\r\n};\r\n\r\nexport const editTask = (task) => {\r\n  return {\r\n    type: types.EDIT_TASK,\r\n    task,\r\n  };\r\n};\r\n\r\nexport const filterTask = (filter) => {\r\n  return {\r\n    type: types.FILTER_TABLE,\r\n    filter, // filterObj: filter -> filterName , filterStatus\r\n  };\r\n};\r\n\r\nexport const searchTask = (keyword) => {\r\n  return {\r\n    type: types.SEARCH,\r\n    keyword,\r\n  };\r\n};\r\n\r\nexport const sortTask = (sort)=>{\r\n  return{\r\n    type: types.SORT,\r\n    sort // sort : sort -> sortBy , sortValue\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      status: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    if (this.props.taskEditing && this.props.taskEditing.id !== null) {\r\n      this.setState({\r\n        id: this.props.taskEditing.id,\r\n        name: this.props.taskEditing.name,\r\n        status: this.props.taskEditing.status,\r\n      });\r\n    } else {\r\n      this.onClear();\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n  \r\n    if (props && props.taskEditing) {\r\n      if (props.taskEditing.id !== state.id) {\r\n        return {\r\n          id: props.taskEditing.id,\r\n          name: props.taskEditing.name,\r\n          status: props.taskEditing.status,\r\n        };\r\n      }\r\n    } else {\r\n      if (state.id) {\r\n        return {\r\n          id: \"\",\r\n          name: \"\",\r\n          status: false,\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    if (name === \"status\") {\r\n      value = target.value === \"true\" ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSaveTask(this.state);\r\n    this.onClear();\r\n    this.onCloseForm();\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      status: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var { id } = this.state;\r\n    const styleObj = { display: \"flex\", justifyContent: \"space-between\" };\r\n    if (!this.props.isDisplayForm) return null;\r\n    return (\r\n      <div className=\"panel panel-warning\">\r\n        <div className=\"panel-heading\">\r\n          <h3 className=\"panel-title\" style={styleObj}>\r\n            {id !== \"\" ? \"Cập nhật công việc\" : \"Thêm Công Việc\"}\r\n            <span\r\n              className=\"fa fa-times-circle text-right close-form\"\r\n              onClick={this.onCloseForm}\r\n            ></span>\r\n          </h3>\r\n        </div>\r\n        <div className=\"panel-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Tên :</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={this.state.name}\r\n                name=\"name\"\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <label>Trạng Thái :</label>\r\n            <select\r\n              className=\"form-control\"\r\n              required=\"required\"\r\n              name=\"status\"\r\n              value={this.state.status}\r\n              onChange={this.onChange}\r\n            >\r\n              <option value={true}>Kích Hoạt</option>\r\n              <option value={false}>Ẩn</option>\r\n            </select>\r\n            <br />\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-warning\">\r\n                {id !== \"\" ? \"Cập nhật\" : \"Thêm\"}\r\n              </button>\r\n              &nbsp;\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-danger\"\r\n                onClick={this.onClear}\r\n              >\r\n                Hủy Bỏ\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isDisplayForm: state.isDisplayForm,\r\n    taskEditing: state.taskEditing,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSaveTask: (task) => {\r\n      dispatch(actions.saveTask(task));\r\n    },\r\n\r\n    onCloseForm: () => {\r\n      dispatch(actions.closeForm());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      keyword: \"\",\r\n    };\r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSearch = () => {\r\n    this.props.onSearch(this.state.keyword);\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    var { keyword } = this.state;\r\n    return (\r\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            name=\"keyword\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Nhập từ khóa...\"\r\n            value={keyword}\r\n            onChange={this.onChange}\r\n          />\r\n          <span className=\"input-group-btn\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              onClick={this.onSearch}\r\n            >\r\n              <span className=\"fa fa-search mr-5\"></span> Tìm\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  keyword: state.search,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSearch: (keyword) => {\r\n      dispatch(actions.searchTask(keyword));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\nclass Sort extends Component {\r\n\r\n\r\n  onClick = (sortBy, sortValue) => {\r\n    this.props.onSort({\r\n      by : sortBy,\r\n      value : sortValue\r\n    })\r\n  \r\n  };\r\n\r\n\r\n  render() {\r\n    var { sort } = this.props;\r\n    return (\r\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n        <div className=\"dropdown\">\r\n          {/* Drop down menu sort */}\r\n          <button\r\n            className=\"btn btn-primary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"dropdownMenu1\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"true\"\r\n          >\r\n            Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n            <li onClick={() => this.onClick(\"name\", 1)}>\r\n              <a\r\n                role=\"button\"\r\n                href=\".#\"\r\n                className={\r\n                  sort.by === \"name\" && sort.value === 1 ? \"sort-selected\" : \"\"\r\n                }\r\n              >\r\n                <span className=\"fa fa-sort-alpha-asc pr-5\">Tên A-Z</span>\r\n              </a>\r\n            </li>\r\n            <li onClick={() => this.onClick(\"name\", -1)}>\r\n              <a\r\n                role=\"button\"\r\n                href=\".#\"\r\n                className={\r\n                  sort.by === \"name\" && sort.value === -1 ? \"sort-selected\" : \"\"\r\n                }\r\n              >\r\n                <span className=\"fa fa-sort-alpha-desc pr-5\">Tên Z-A</span>\r\n              </a>\r\n            </li>\r\n            <li role=\"separator\" className=\"divider\"></li>\r\n            <li onClick={() => this.onClick(\"status\", 1)}>\r\n              <a\r\n                role=\"button\"\r\n                href=\".#\"\r\n                className={\r\n                  sort.by === \"status\" && sort.value === 1\r\n                    ? \"sort-selected\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                Trạng Thái Kích Hoạt\r\n              </a>\r\n            </li>\r\n            <li onClick={() => this.onClick(\"status\", -1)}>\r\n              <a\r\n                role=\"button\"\r\n                href=\".#\"\r\n                className={\r\n                  sort.by === \"status\" && sort.value === -1\r\n                    ? \"sort-selected\"\r\n                    : \"\"\r\n                }\r\n              >\r\n                Trạng Thái Ẩn\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    sort : state.sort,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onSort: (sort) => {\r\n      dispatch(actions.sortTask(sort));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort);\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\n\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        {/* SEARCH */}\r\n        <Search />\r\n        {/* SORT */}\r\n        <Sort />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../actions/index';\r\nclass TaskItem extends Component {\r\n  onUpdateStatus = () => {\r\n    this.props.onUpdateStatus(this.props.task.id);\r\n  };\r\n\r\n  onDeleteItem = () => {\r\n    this.props.onDeleteTask(this.props.task.id);\r\n    this.props.onCloseForm();\r\n  };\r\n\r\n  onUpdateItem = () => {\r\n    this.props.onOpenForm()\r\n    this.props.onEditTask(this.props.task)\r\n    this.props.onOpenForm()\r\n  };\r\n\r\n  render() {\r\n    var { task, index } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{index + 1}</td>\r\n        <td>{task.name}</td>\r\n        <td className=\"text-center\">\r\n          <span\r\n            className={\r\n              task.status === true\r\n                ? \"label label-danger\"\r\n                : \"label label-success\"\r\n            }\r\n            onClick={this.onUpdateStatus}\r\n          >\r\n            {task.status === true ? \"Kích hoạt\" : \"Ẩn\"}\r\n          </span>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={this.onUpdateItem}\r\n          >\r\n            <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={this.onDeleteItem}\r\n          >\r\n            <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks : state.tasks,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onUpdateStatus: (id) => {\r\n      dispatch(actions.updateStatus(id));\r\n    },\r\n    onDeleteTask: (id) =>{\r\n      dispatch(actions.deleteTask(id));\r\n    },\r\n    onCloseForm: () => {\r\n      dispatch(actions.closeForm());\r\n    },\r\n    onOpenForm: () => {\r\n      dispatch(actions.openForm());\r\n    },\r\n    onEditTask: (task) => {\r\n      dispatch(actions.editTask(task));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\r\n","import React, { Component } from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName: \"\",\r\n      filterStatus: -1, // all: -1, active : 1, deactive : 0\r\n    };\r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    var filter = {\r\n      name: name === \"filterName\" ? value : this.state.filterName,\r\n      status: name === \"filterStatus\" ? value : this.state.filterStatus,\r\n    };\r\n    this.props.onFilterTable(filter);\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    var { tasks, filterTable, keyword,sort } = this.props;\r\n    var { filterName, filterStatus } = this.state;\r\n\r\n    //Filter on table\r\n    if (filterTable) {\r\n      if (filterTable.name) {\r\n        tasks = tasks.filter((task) => {\r\n          return (\r\n            task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !==\r\n            -1\r\n          );\r\n        });\r\n      }\r\n      tasks = tasks.filter((task) => {\r\n        if (filterTable.status === -1) {\r\n          return task;\r\n        } else {\r\n          return task.status === (filterTable.status === 1 ? true : false);\r\n        }\r\n      });\r\n    }\r\n\r\n    //search\r\n    if (keyword) {\r\n      tasks = tasks.filter((task) => {\r\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\r\n      });\r\n      //lodash\r\n      // tasks = filter(tasks, (task) =>{\r\n      // return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\r\n    }\r\n    //sort\r\n    if (sort.by === \"name\") {\r\n      tasks.sort((a, b) => {\r\n        if (a.name > b.name) return sort.value;\r\n        else if (a.name < b.name) return -sort.value;\r\n        else return 0;\r\n      });\r\n    } else {\r\n      tasks.sort((a, b) => {\r\n        if (a.status > b.status) return -sort.value;\r\n        else if (a.status < b.status) return sort.value;\r\n        else return 0;\r\n      });\r\n    }\r\n\r\n    var elmTasks = tasks.map((task, index) => {\r\n      return (\r\n        <TaskItem\r\n          key={task.id}\r\n          index={index}\r\n          task={task}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <table className=\"table table-bordered table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"text-center\">STT</th>\r\n            <th className=\"text-center\">Tên</th>\r\n            <th className=\"text-center\">Trạng Thái</th>\r\n            <th className=\"text-center\">Hành Động</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td></td>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"filterName\"\r\n                value={filterName}\r\n                onChange={this.onChange}\r\n              />\r\n            </td>\r\n            <td>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"filterStatus\"\r\n                value={filterStatus}\r\n                onChange={this.onChange}\r\n              >\r\n                <option value=\"-1\">Tất Cả</option>\r\n                <option value=\"0\">Ẩn</option>\r\n                <option value=\"1\">Kích Hoạt</option>\r\n              </select>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          {elmTasks}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tasks: state.tasks,\r\n    filterTable: state.filterTable,\r\n    keyword: state.search,\r\n    sort : state.sort\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onFilterTable: (filter) => {\r\n      dispatch(actions.filterTask(filter));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\n// import { findIndex, filter } from \"lodash\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\nclass App extends Component {\n  onOpenForm = () => {\n    this.props.onOpenForm();\n    this.props.onClearTask({\n      id: \"\",\n      name: \"\",\n      status: false,\n    });\n  };\n\n  render() {\n    var { isDisplayForm } = this.props;\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc </h1>\n          <hr />\n        </div>\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            {/* FORM */}\n            <TaskForm />\n          </div>\n          {/* TODO List */}\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onOpenForm}\n            >\n              <span className=\"fa fa-plus mr-5\"></span> Thêm Công Việc\n            </button>\n            {/* SEARCH AND SORT */}\n            <Control />\n            {/* show TODO list   */}\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TaskList />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onClearTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"./../constants/ActionTypes\";\r\n\r\nvar s4 = () => {\r\n  return Math.floor((1 + Math.random()) * 0x10000)\r\n    .toString(16)\r\n    .substring(1);\r\n};\r\n\r\nvar generateID = () => {\r\n  return (\r\n    s4() +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    \"-\" +\r\n    s4() +\r\n    s4() +\r\n    s4()\r\n  );\r\n};\r\n\r\nvar findIndex = (tasks, id) => {\r\n  var result = -1;\r\n  tasks.forEach((task, index) => {\r\n    if (task.id === id) {\r\n      result = index;\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\nvar data = JSON.parse(localStorage.getItem(\"tasks\"));\r\nvar initialState = data ? data : [];\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  var id = \"\";\r\n  var index = -1;\r\n  switch (action.type) {\r\n    case types.LIST_ALL:\r\n      return state;\r\n\r\n    case types.SAVE_TASK:\r\n      var task = {\r\n        id: action.task.id,\r\n        name: action.task.name,\r\n        status: action.task.status,\r\n      };\r\n      if (!task.id) {\r\n        task.id = generateID();\r\n        state.push(task);\r\n      } else {\r\n        index = findIndex(state, task.id);\r\n        state[index] = task;\r\n      }\r\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\r\n      return [...state];\r\n\r\n    case types.UPDATE_STATUS_TASK:\r\n      index = findIndex(state, action.id);\r\n      state[index].status = !state[index].status;\r\n\r\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\r\n      return [...state];\r\n\r\n    case types.DELETE_TASK:\r\n      id = action.id;\r\n      index = findIndex(state, id);\r\n      state.splice(index, 1);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\r\n      return [...state];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\n\r\nvar initialState = false;\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_FORM:\r\n      return !state;\r\n    case types.OPEN_FORM:\r\n      return true;\r\n    case types.CLOSE_FORM:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\nconst initialState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  status: false,\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.EDIT_TASK:\r\n      return action.task;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\nconst initialState = {\r\n    name: '',\r\n    status: -1\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.FILTER_TABLE:\r\n        action.filter.status = parseInt(action.filter.status)\r\n      return action.filter\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\nconst initialState = '';\r\n\r\n\r\n\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SEARCH:\r\n      return action.keyword\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import * as types from \"../constants/ActionTypes\";\r\nconst initialState = {\r\n    by: 'name',\r\n    value: 1\r\n};\r\n\r\nvar myReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.SORT:\r\n      return {\r\n        by : action.sort.by,\r\n        value : action.sort.value\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default myReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport tasks from \"./tasks\";\r\nimport isDisplayForm from \"./isDisplayForm\";\r\nimport taskEditing from \"./taskEditing\";\r\nimport filterTable from \"./filterTable\";\r\nimport search from \"./search\";\r\nimport sort from \"./sort\";\r\n\r\nconst myReducer = combineReducers({\r\n  tasks, // tasks : tasks\r\n  isDisplayForm, // isDisPlay : isDisplay\r\n  taskEditing,\r\n  filterTable,\r\n  search,\r\n  sort\r\n});\r\n\r\nexport default myReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n//Store\nimport { createStore } from \"redux\";\nimport myReducer from \"./reducers/index\";\nimport { Provider } from \"react-redux\";\nconst store = createStore(\n  myReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}